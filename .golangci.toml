version = "2"

[linters]
settings.gosec.excludes = [
    "G301", # Poor file permissions used when creating a directory
    "G302", # Poor file permissions used with chmod
    "G306", # Poor file permissions used when writing to a new file
]
settings.gocyclo.min-complexity = 10
settings.mnd = { checks = [
    "argument",
    "case",
    "condition",
    "operation",
    "return",
    "assign",
] }

enable = [
    # Visit https://golangci-lint.run/usage/linters/
    # for the full, current list of available linters.

    # Default linters
    "errcheck",    # Detect unchecked errors
    "govet",       # Reports suspicious constructs
    "ineffassign", # Detects unused variable assignments
    "staticcheck", # go vet on steroids
    "unused",      # Detect unused constants, variables, functions and types

    #"varcheck", # Find unused global variables and constants

    # Suggested additional linters
    "gocyclo",   # or "cyclop", # Detect cyclomatic complexity
    "goconst",   # Detect repeated values that can be made constants
    "gocritic",  # Provides diagnostics that check for bugs, performance and style issues.
    "gosec",     # Security linter
    "importas",  # Enforces consistent import aliases.
    "misspell",  # Fix spelling errors
    "revive",    # General purpose linter
    "unconvert", # Detect unnecessary type conversions
    "unparam",   # Detect unused function parameters

    # Optional
    "bodyclose",  # Check whether HTTP response bodies are closed
    "err113",     # Enforce standard error handling practices
    "depguard",   # Forbid certain package imports
    "dupl",       # Detect duplicate code
    "errchkjson", # some JSON-specific checks
    "nakedret",   # Detect naked returns
]
exclusions.rules = [{ path = "_test\\.go", linters = ["gocyclo"] }]

[formatters]
enable = ["gofumpt"]
