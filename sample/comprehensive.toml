# Comprehensive test configuration file for go-safe-cmd-runner
# This file covers all major configuration features and edge cases for thorough testing
# Including Slack notification integration
version = "1.0"

[global]
timeout = 60
workdir = "/tmp/cmd-runner-comprehensive"
log_level = "debug"
skip_standard_paths = true
# Global environment variables - comprehensive list for testing
env_allowlist = [
    "PATH",
    "HOME",
    "USER",
    "LANG",
    "LC_ALL",
    "SHELL",
    "TEST_GLOBAL_VAR",
    "COMPREHENSIVE_TEST",
    "NODE_ENV",
    "DEBUG_MODE",
    "GOTRACEBACK",
    "SLACK_WEBHOOK_URL",
]

# Global internal variables available for TOML expansion
vars = [
    "app_name=cmd-runner",
    "test_mode=comprehensive"
]

verify_files = ["/etc/passwd", "/bin/sh"]

# Group 1: Basic functionality test - no dependencies
[[groups]]
name = "basic_tests"
description = "Basic command execution tests without special features"
priority = 1

[[groups.commands]]
name = "simple_echo"
description = "Simple echo command test"
cmd = "echo"
args = ["Basic test successful"]

[[groups.commands]]
name = "environment_display"
description = "Display environment variables"
cmd = "env"
args = []

# Group 2: Security and privilege tests
[[groups]]
name = "security_tests"
description = "Security feature testing including privilege escalation"
priority = 2
# Group-level explicit environment allowlist (overrides global)
env_allowlist = ["PATH", "HOME", "TEST_SECURITY_VAR"]

[[groups.commands]]
name = "privileged_whoami"
description = "Test privileged command execution"
cmd = "/usr/bin/whoami"
args = []
run_as_user = "root"

[[groups.commands]]
name = "unprivileged_id"
description = "Test unprivileged command execution"
cmd = "id"
args = []

[[groups.commands]]
name = "custom_env_test"
description = "Test custom environment variables passed to child process"
cmd = "printenv"
args = ["TEST_SECURITY_VAR"]
env = ["TEST_SECURITY_VAR=security_value"]

# Group 3: Resource management tests - temporary directories and cleanup
[[groups]]
name = "resource_tests"
description = "Test temporary directory creation and cleanup"
priority = 3
temp_dir = true
cleanup = true

[[groups.commands]]
name = "create_temp_file"
description = "Create temporary file in temp directory"
cmd = "touch"
args = ["test_temp_file.txt"]

[[groups.commands]]
name = "list_temp_contents"
description = "List contents of temporary directory"
cmd = "ls"
args = ["-la"]

[[groups.commands]]
name = "write_temp_data"
description = "Write data to temporary file"
cmd = "echo"
args = ["Temporary data for testing"]

# Group 4: Working directory tests
[[groups]]
name = "workdir_tests"
description = "Test custom working directory functionality"
priority = 4
workdir = "/tmp/custom-workdir-test"

[[groups.commands]]
name = "test_workdir"
description = "Test working in custom directory"
cmd = "pwd"
args = []

[[groups.commands]]
name = "create_workdir_file"
description = "Create file in custom working directory"
cmd = "touch"
args = ["workdir_test_file.txt"]

# Group 5: Environment variable and internal variable tests
[[groups]]
name = "env_var_tests"
description = "Test internal variables and environment variable passing"
priority = 5
# Test inheritance mode - inherits from global by not specifying env_allowlist

# Group-level internal variables
vars = [
    "group_var=group_value",
    "test_var=inherited_value"
]

[[groups.commands]]
name = "test_internal_var_expansion"
description = "Test internal variable expansion in TOML"
cmd = "echo"
args = ["Group var: %{group_var}, Test var: %{test_var}"]

[[groups.commands]]
name = "test_env_to_child"
description = "Test passing environment variable to child process"
cmd = "printenv"
args = ["TEST_GLOBAL_VAR"]
env = ["TEST_GLOBAL_VAR=%{test_var}"]  # Pass internal var to child process

[[groups.commands]]
name = "test_node_env"
description = "Test NODE_ENV environment variable to child process"
cmd = "printenv"
args = ["NODE_ENV"]
env = ["NODE_ENV=test_environment"]

[[groups.commands]]
name = "test_system_env_import"
description = "Test importing system environment variable"
cmd = "echo"
args = ["User from system: %{username}"]
vars = []
from_env = ["username=USER"]

# Group 6: Environment variable rejection tests
[[groups]]
name = "env_rejection_tests"
description = "Test environment variable rejection"
priority = 6
# Explicit empty allowlist - rejects all environment variables
env_allowlist = []
from_env = []  # No system env imports

[[groups.commands]]
name = "test_env_rejection"
description = "Test that environment variables are rejected"
cmd = "echo"
args = ["Should not see any custom env vars"]

# Group 7: Timeout tests
[[groups]]
name = "timeout_tests"
description = "Test timeout functionality at command and global level"
priority = 7

[[groups.commands]]
name = "quick_command"
description = "Quick command that should complete within timeout"
cmd = "echo"
args = ["Quick completion"]
timeout = 5

[[groups.commands]]
name = "medium_command"
description = "Medium duration command"
cmd = "sleep"
args = ["2"]
timeout = 10

# Group 8: File verification tests
[[groups]]
name = "file_verification_tests"
description = "Test file verification functionality"
priority = 8
verify_files = ["/bin/echo", "/usr/bin/env"]

[[groups.commands]]
name = "verify_system_files"
description = "Test system file verification"
cmd = "echo"
args = ["File verification test"]

[[groups.commands]]
name = "test_verified_command"
description = "Use verified command"
cmd = "/bin/echo"
args = ["Using verified command"]

# Group 9: Variable expansion tests
[[groups]]
name = "variable_expansion_tests"
description = "Test variable expansion in various contexts"
priority = 9

vars = [
    "base_dir=/tmp/expansion-test",
    "file_name=test.txt",
    "full_path=%{base_dir}/%{file_name}"
]

[[groups.commands]]
name = "test_nested_expansion"
description = "Test nested variable expansion"
cmd = "echo"
args = ["Full path: %{full_path}"]

[[groups.commands]]
name = "test_auto_vars"
description = "Test automatic internal variables"
cmd = "echo"
args = ["DateTime: %{__runner_datetime}, PID: %{__runner_pid}"]

# Group 10: All features combined
[[groups]]
name = "comprehensive_final"
description = "Final comprehensive test combining all features"
priority = 10
temp_dir = true
cleanup = true
workdir = "/tmp/final-comprehensive-test"
env_allowlist = ["PATH", "HOME", "FINAL_TEST_VAR"]
verify_files = ["/bin/echo"]

vars = [
    "final_msg=comprehensive_success",
    "test_complete=true"
]

[[groups.commands]]
name = "final_privileged_test"
description = "Final privileged operation test"
cmd = "/usr/bin/whoami"
args = []
run_as_user = "root"
timeout = 30

[[groups.commands]]
name = "final_var_expansion"
description = "Final internal variable expansion test"
cmd = "echo"
args = ["Final message: %{final_msg}, Complete: %{test_complete}"]

[[groups.commands]]
name = "final_env_test"
description = "Final environment variable test"
cmd = "printenv"
args = ["FINAL_TEST_VAR"]
env = ["FINAL_TEST_VAR=%{final_msg}"]

[[groups.commands]]
name = "final_summary"
description = "Final comprehensive test summary"
cmd = "echo"
args = [
    "ðŸŽ‰ All comprehensive tests completed successfully! Slack notifications active.",
]
timeout = 15
