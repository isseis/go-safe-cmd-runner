# Advanced Output Capture Configuration Example
# This file demonstrates advanced features including size limits, privilege escalation,
# and complex output scenarios
version = "1.0"

[global]
timeout = 60
workdir = "/tmp/advanced-output-test"
log_level = "debug"
# Set higher output size limit for advanced scenarios (10MB)
max_output_size = 10485760
env_allowlist = [
    "PATH",
    "HOME",
    "USER",
    "LANG",
    "LC_ALL",
    "SHELL",
    "ADVANCED_TEST_VAR",
    "BUILD_ENV",
]
verify_files = ["/bin/echo", "/usr/bin/find"]

# Advanced output capture with size management
[[groups]]
name = "size_management_tests"
description = "Test output size limits and large output handling"
priority = 1

[[groups.commands]]
name = "large_directory_listing"
description = "Generate large output with complete system directory listing"
cmd = "/usr/bin/find"
args = ["/usr", "-type", "f", "-ls"]
output = "large_system_listing.txt"
timeout = 120

[[groups.commands]]
name = "system_processes"
description = "Capture detailed process information"
cmd = "ps"
args = ["aux"]
output = "process_list.txt"

[[groups.commands]]
name = "disk_usage_report"
description = "Generate disk usage report"
cmd = "du"
args = ["-ah", "/var/log"]
output = "disk_usage_report.txt"
timeout = 90

# Privileged operations with output capture
[[groups]]
name = "privileged_output_capture"
description = "Test output capture with privileged operations"
priority = 2

[[groups.commands]]
name = "system_info_as_root"
description = "System information with root privileges"
cmd = "dmidecode"
args = ["-t", "system"]
run_as_user = "root"
output = "system_info.txt"
timeout = 30

[[groups.commands]]
name = "network_connections"
description = "Display network connections with privileges"
cmd = "netstat"
args = ["-tlnp"]
run_as_user = "root"
output = "network_connections.txt"

[[groups.commands]]
name = "kernel_modules"
description = "List kernel modules"
cmd = "lsmod"
args = []
output = "kernel_modules.txt"

# Complex path scenarios
[[groups]]
name = "complex_path_scenarios"
description = "Test various path configurations for output files"
priority = 3
temp_dir = true
cleanup = true

[[groups.commands]]
name = "temp_dir_output"
description = "Output to temporary directory"
cmd = "uname"
args = ["-a"]
output = "system_info.txt"

[[groups.commands]]
name = "nested_directory_creation"
description = "Output to nested directory (auto-created)"
cmd = "date"
args = ["+%Y-%m-%d %H:%M:%S"]
output = "logs/daily/current_time.txt"

[[groups.commands]]
name = "different_workdir"
description = "Output with different working directory"
cmd = "pwd"
args = []
workdir = "/tmp/different-workdir"
output = "working_directory.txt"

# Environment variable testing with output
[[groups]]
name = "environment_output_tests"
description = "Test environment variables with output capture"
priority = 4
env_allowlist = ["PATH", "HOME", "ADVANCED_TEST_VAR", "BUILD_ENV"]

[[groups.commands]]
name = "custom_env_capture"
description = "Capture output with custom environment"
cmd = "printenv"
args = ["BUILD_ENV"]
env = ["BUILD_ENV=production", "ADVANCED_TEST_VAR=advanced_value"]
output = "custom_env_output.txt"

[[groups.commands]]
name = "build_script_simulation"
description = "Simulate build script with output capture"
cmd = "echo"
args = ["Build completed successfully in ${BUILD_ENV} environment"] # Note: variable expansion is not yet implemented
env = ["BUILD_ENV=staging"]
output = "build_results.txt"

# Performance and resource management
[[groups]]
name = "performance_tests"
description = "Test performance aspects of output capture"
priority = 5

[[groups.commands]]
name = "cpu_intensive_with_output"
description = "CPU intensive command with output capture"
cmd = "openssl"
args = ["speed", "aes-256-cbc"]
output = "openssl_benchmark.txt"
timeout = 180

[[groups.commands]]
name = "memory_info_capture"
description = "Capture memory information"
cmd = "cat"
args = ["/proc/meminfo"]
output = "memory_info.txt"

[[groups.commands]]
name = "system_uptime"
description = "System uptime and load"
cmd = "uptime"
args = []
output = "system_uptime.txt"

# Mixed scenarios - some with output, some without
[[groups]]
name = "mixed_output_scenarios"
description = "Mix of commands with and without output capture"
priority = 6

[[groups.commands]]
name = "with_capture"
description = "Command with output capture"
cmd = "hostname"
args = []
output = "hostname.txt"

[[groups.commands]]
name = "without_capture"
description = "Command without output capture (standard output)"
cmd = "echo"
args = ["This appears on standard output"]

[[groups.commands]]
name = "with_capture_again"
description = "Another command with output capture"
cmd = "whoami"
args = []
output = "current_user.txt"

[[groups.commands]]
name = "final_status"
description = "Final status without capture"
cmd = "echo"
args = ["Advanced output capture tests completed"]
