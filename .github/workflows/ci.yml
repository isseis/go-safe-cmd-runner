name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cgo: [0, 1]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CGO dependencies
        if: matrix.cgo == 1
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Run tests (CGO=${{ matrix.cgo }})
        env:
          CGO_ENABLED: ${{ matrix.cgo }}
        run: |
          if [ "${{ matrix.cgo }}" = "1" ]; then
            go test -v -race -coverprofile=coverage-cgo${{ matrix.cgo }}.txt -covermode=atomic ./...
          else
            go test -v -coverprofile=coverage-cgo${{ matrix.cgo }}.txt -covermode=atomic ./...
          fi

      - name: Upload coverage to Codecov
        continue-on-error: true  # Don't fail the build if Codecov is rate limited
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage-cgo${{ matrix.cgo }}.txt
          flags: cgo${{ matrix.cgo }}
          name: codecov-cgo${{ matrix.cgo }}
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
          args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cgo: [0, 1]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CGO dependencies
        if: matrix.cgo == 1
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build (CGO=${{ matrix.cgo }})
        env:
          CGO_ENABLED: ${{ matrix.cgo }}
        run: go build -v ./...

      - name: Verify modules
        run: go mod tidy && git diff --exit-code
